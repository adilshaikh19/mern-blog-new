{"ast":null,"code":"var _jsxFileName = \"/Users/veyselkartalmis/Desktop/mern-blog/client/src/pages/PostPage.jsx\",\n  _s = $RefreshSig$();\nimport { formatISO9075 } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [postInfo, setPostInfo] = useState();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      response.json().then(postInfo => {\n        setPostInfo(postInfo);\n      });\n    });\n  }, []);\n  if (!postInfo) return \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: formatISO9075(new Date(postInfo.createdAt))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"by \", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${postInfo.cover}`,\n        alt: \"blog-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"cq5ATEJRRi3J6ohJKIbRYcvCFzg=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["formatISO9075","useEffect","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","id","fetch","then","response","json","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","author","username","src","cover","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["/Users/veyselkartalmis/Desktop/mern-blog/client/src/pages/PostPage.jsx"],"sourcesContent":["import { formatISO9075 } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst PostPage = () => {\n  const [postInfo, setPostInfo] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then((response) => {\n      response.json().then((postInfo) => {\n        setPostInfo(postInfo);\n      });\n    });\n  }, []);\n\n  if (!postInfo) return \"\";\n\n  return (\n    <div className=\"post-page\">\n      <h1>{postInfo.title}</h1>\n      <time>{formatISO9075(new Date(postInfo.createdAt))}</time>\n      <div className=\"author\">by {postInfo.author.username}</div>\n      <div className=\"image\">\n        <img src={`http://localhost:4000/${postInfo.cover}`} alt=\"blog-image\" />\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: postInfo.content }} />\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC1C,MAAM;IAAEQ;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACdU,KAAK,CAAE,8BAA6BD,EAAG,EAAC,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC3DA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEJ,QAAQ,IAAK;QACjCC,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;EAExB,oBACEH,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBhB,OAAA;MAAAW,QAAA,EAAOhB,aAAa,CAAC,IAAIsB,IAAI,CAACd,QAAQ,CAACe,SAAS,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1DhB,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,KAAG,EAACR,QAAQ,CAACgB,MAAM,CAACC,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DhB,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBX,OAAA;QAAKqB,GAAG,EAAG,yBAAwBlB,QAAQ,CAACmB,KAAM,EAAE;QAACC,GAAG,EAAC;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNhB,OAAA;MAAKwB,uBAAuB,EAAE;QAAEC,MAAM,EAAEtB,QAAQ,CAACuB;MAAQ;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACd,EAAA,CAzBID,QAAQ;EAAA,QAEGH,SAAS;AAAA;AAAA6B,EAAA,GAFpB1B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}